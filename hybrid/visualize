import matplotlib.pyplot as plt
import numpy as np

def plot_similarity_heatmap(sim_df, out_path: str):
    fig, ax = plt.subplots(figsize=(8, 6))
    im = ax.imshow(sim_df.values)
    ax.set_xticks(np.arange(len(sim_df.columns)))
    ax.set_yticks(np.arange(len(sim_df.index)))
    ax.set_xticklabels(sim_df.columns, rotation=45, ha="right")
    ax.set_yticklabels(sim_df.index)
    ax.set_title("Attribute Semantic Similarity")
    fig.tight_layout()
    plt.savefig(out_path, dpi=200)
    plt.close(fig)

def plot_knowledge_graph(G, out_path: str):
    import networkx as nx
    fig, ax = plt.subplots(figsize=(8, 6))
    pos = nx.spring_layout(G, seed=42)
    nx.draw_networkx_nodes(G, pos, ax=ax)
    nx.draw_networkx_labels(G, pos, ax=ax, font_size=9)
    weights = [G[u][v]["weight"] for u, v in G.edges()]
    nx.draw_networkx_edges(G, pos, width=[1 + 3*w for w in weights], arrows=True, ax=ax)
    edge_labels = {(u,v): f"{G[u][v]['weight']:.2f}" for u,v in G.edges()}
    nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels, ax=ax, font_size=7)
    ax.set_title("Knowledge Graph (Similarity + Co-occurrence)")
    ax.axis("off")
    fig.tight_layout()
    plt.savefig(out_path, dpi=200)
    plt.close(fig)
