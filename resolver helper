def _state(score: float) -> str:
    if score >= 0.90: return "auto_accept"
    if score >= 0.70: return "needs_review"
    return "likely_wrong"

def extract_max_conf_per_field(fields: dict) -> dict:
    """
    fields: resolved dict from resolve_candidates (has value, final_confidence, state, evidence...)
    returns: { field: {value, confidence, state} }
    """
    out = {}
    for field, info in fields.items():
        if not isinstance(info, dict):
            continue
        v = info.get("value")
        conf = info.get("final_confidence", 0.0)
        st = info.get("state") or _state(conf)
        out[field] = {"value": v, "confidence": conf, "state": st}
    return out
