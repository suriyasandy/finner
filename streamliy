import streamlit as st
import json
import yaml
from pipeline import run_pipeline

st.set_page_config(page_title="Entity Extraction Review", layout="wide")

st.title("üìÑ Intelligent Financial Entity Extraction")
st.caption("JSON gazetteers + regex + spaCy fallback + resolver")

config_path = st.text_input("Config YAML Path", "config_gfxcash.yml")
input_file = st.file_uploader("Upload file (HTML, .msg parsed HTML, image, PDF, or text)", type=None)

if st.button("Run Extraction") and input_file:
    # Save uploaded file temporarily
    tmp_path = f"/tmp/{input_file.name}"
    with open(tmp_path, "wb") as f:
        f.write(input_file.read())

    result = run_pipeline(tmp_path, config_path)

    st.subheader("Overall Trust Score")
    st.progress(result["overall_trust"])
    st.write(f"{result['overall_trust']*100:.1f}%")

    st.subheader("Fields")
    for field, info in result["fields"].items():
        state = info["state"]
        if state == "auto_accept":
            color = "‚úÖ"
        elif state == "needs_review":
            color = "‚ö†Ô∏è"
        else:
            color = "‚ùå"
        st.markdown(f"**{field}** {color} ‚Äî `{info['value']}` ({info['final_confidence']*100:.1f}%)")
        with st.expander("Evidence"):
            st.json(info["evidence"], expanded=False)
